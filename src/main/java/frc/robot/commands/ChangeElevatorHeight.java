// RobotBuilder Version: 6.1
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

// ROBOTBUILDER TYPE: InstantCommand.

package frc.robot.commands;
import edu.wpi.first.wpilibj2.command.InstantCommand;
import edu.wpi.first.wpilibj2.command.SequentialCommandGroup;
import frc.robot.RobotContainer;
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import frc.robot.subsystems.Elevator;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS

/**
 *
 */
public class ChangeElevatorHeight extends SequentialCommandGroup {

    private final Elevator m_elevator;
    private int m_elevatorHeight;


    public ChangeElevatorHeight(int elevatorHeight, Elevator subsystem) {
        m_elevatorHeight = elevatorHeight;

        m_elevator = subsystem;
        addRequirements(m_elevator);

        // int currentHeight = RobotContainer.currentElevatorHeight;
        // double distanceToTravel = (some function of m_elevatorHeight and currentHeight);
        //     *remember to invert motors depending on which way the elevator is traveling
        // double currentPos = m_elevator.(???); // use to find end position

        // RobotContainer.currentElevatorHeight = m_elevatorHeight; // update static variable

        addCommands(
            // RunElevator(speed, m_elevator).until(???);
            /**
            * Access elevator encoders from here?
            * run until elevator.getPos() returns distanceToTravel + currentPos
            * Use constant elevator speed?
            */
        );
    }

    @Override
    public boolean runsWhenDisabled() {
        return false;
    }
}
