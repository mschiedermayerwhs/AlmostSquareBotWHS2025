// RobotBuilder Version: 6.1
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

// ROBOTBUILDER TYPE: InstantCommand.

package frc.robot.commands;
import edu.wpi.first.wpilibj2.command.Command;
import edu.wpi.first.wpilibj2.command.Commands;
import edu.wpi.first.wpilibj2.command.InstantCommand;
import edu.wpi.first.wpilibj2.command.SequentialCommandGroup;
import edu.wpi.first.wpilibj2.command.WaitCommand;
import frc.robot.RobotContainer;
import frc.robot.subsystems.DriveSubsystem;
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import frc.robot.subsystems.Elevator;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS

/**
 *
 */
public class TestDriveWaitStopCmd extends SequentialCommandGroup {


    // THIS DOES NOT WORK!!!!!
    
    DriveSubsystem m_DriveSubsystem;
    Double leftSpeed;
    Double rightSpeed;
    Double seconds;
 

    public TestDriveWaitStopCmd(Double leftSpeed, Double rightSpeed, Double seconds, DriveSubsystem subsystem) {
        this.leftSpeed = leftSpeed;
        this.rightSpeed = rightSpeed;
        this.seconds = seconds;

        m_DriveSubsystem = subsystem;
        addRequirements(m_DriveSubsystem);

        addCommands(
            new TankDrive(() -> leftSpeed, () -> rightSpeed, subsystem),
            new WaitCommand(seconds),                                       //Commands.waitSeconds(seconds), I think this is an old way
            new TankDrive(() -> 0.0, () -> 0.0, subsystem)
        );
        
    }

    // Called once when this command runs
    // @Override
    // public void initialize() {
       
    // }

    @Override
    public boolean runsWhenDisabled() {
       
        return false;
    }
}
